plugins {
	id "java-library"
	id "java-test-fixtures"
	id "org.springframework.boot.auto-configuration"
	id "org.springframework.boot.configuration-properties"
	id "org.springframework.boot.deployed"
	id "org.springframework.boot.optional-dependencies"
}

description = "Spring Boot AutoConfigure"

dependencies {
	api(project(":spring-boot-project:spring-boot"))

	optional("jakarta.servlet:jakarta.servlet-api")
	optional("org.springframework:spring-web")

	testFixturesCompileOnly(project(":spring-boot-project:spring-boot-test"))
	testFixturesCompileOnly(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
	testFixturesCompileOnly("jakarta.websocket:jakarta.websocket-api")
	testFixturesCompileOnly("jakarta.websocket:jakarta.websocket-client-api")

	testFixturesImplementation(testFixtures(project(":spring-boot-project:spring-boot")))

	testImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
	testImplementation(project(":spring-boot-project:spring-boot-test"))
	testImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
	testImplementation(testFixtures(project(":spring-boot-project:spring-boot")))
	testImplementation("ch.qos.logback:logback-classic")
	testImplementation("com.fasterxml.jackson.core:jackson-databind")
	testImplementation("io.projectreactor:reactor-core")
	testImplementation("org.springframework:spring-context-support")

	testRuntimeOnly("com.github.ben-manes.caffeine:caffeine")
	testRuntimeOnly("org.springframework:spring-webflux")
}

test {
	jvmArgs += "--add-opens=java.base/java.net=ALL-UNNAMED"
}
