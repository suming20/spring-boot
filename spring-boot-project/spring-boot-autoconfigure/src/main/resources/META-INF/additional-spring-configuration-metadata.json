{
  "groups": [],
  "properties": [
    {
      "name": "server.compression.enabled",
      "description": "Whether response compression is enabled.",
      "defaultValue": false
    },
    {
      "name": "server.compression.excluded-user-agents",
      "description": "Comma-separated list of user agents for which responses should not be compressed."
    },
    {
      "name": "server.compression.mime-types",
      "description": "Comma-separated list of MIME types that should be compressed.",
      "defaultValue": [
        "text/html",
        "text/xml",
        "text/plain",
        "text/css",
        "text/javascript",
        "application/javascript",
        "application/json",
        "application/xml"
      ]
    },
    {
      "name": "server.compression.min-response-size",
      "description": "Minimum \"Content-Length\" value that is required for compression to be performed.",
      "defaultValue": "2KB"
    },
    {
      "name": "server.connection-timeout",
      "type": "java.time.Duration",
      "deprecation": {
        "reason": "Each server behaves differently. Use server specific properties instead.",
        "level": "error"
      }
    },
    {
      "name": "server.http2.enabled",
      "description": "Whether to enable HTTP/2 support, if the current environment supports it.",
      "defaultValue": false
    },
    {
      "name": "server.max-http-header-size",
      "deprecation": {
        "replacement": "server.max-http-request-header-size",
        "level": "error"
      }
    },
    {
      "name": "server.max-http-post-size",
      "type": "java.lang.Integer",
      "description": "Maximum size in bytes of the HTTP post content.",
      "defaultValue": 0,
      "deprecation": {
        "reason": "Use dedicated property for each container.",
        "level": "error"
      }
    },
    {
      "name": "server.port",
      "defaultValue": 8080
    },
    {
      "name": "server.reactive.session.cookie.domain",
      "description": "Domain for the cookie."
    },
    {
      "name": "server.reactive.session.cookie.http-only",
      "description": "Whether to use \"HttpOnly\" cookies for the cookie."
    },
    {
      "name": "server.reactive.session.cookie.max-age",
      "description": "Maximum age of the cookie. If a duration suffix is not specified, seconds will be used. A positive value indicates when the cookie expires relative to the current time. A value of 0 means the cookie should expire immediately. A negative value means no \"Max-Age\"."
    },
    {
      "name": "server.reactive.session.cookie.name",
      "description": "Name for the cookie."
    },
    {
      "name": "server.reactive.session.cookie.partitioned",
      "description": "Whether the generated cookie carries the Partitioned attribute."
    },
    {
      "name": "server.reactive.session.cookie.path",
      "description": "Path of the cookie."
    },
    {
      "name": "server.reactive.session.cookie.same-site",
      "description": "SameSite setting for the cookie."
    },
    {
      "name": "server.reactive.session.cookie.secure",
      "description": "Whether to always mark the cookie as secure."
    },
    {
      "name": "server.servlet.encoding.charset",
      "description": "Charset of HTTP requests and responses. Added to the \"Content-Type\" header if not set explicitly.",
      "defaultValue": "UTF-8"
    },
    {
      "name": "server.servlet.encoding.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable http encoding support.",
      "defaultValue": true
    },
    {
      "name": "server.servlet.encoding.force",
      "description": "Whether to force the encoding to the configured charset on HTTP requests and responses."
    },
    {
      "name": "server.servlet.encoding.force-request",
      "description": "Whether to force the encoding to the configured charset on HTTP requests. Defaults to true when \"force\" has not been specified."
    },
    {
      "name": "server.servlet.encoding.force-response",
      "description": "Whether to force the encoding to the configured charset on HTTP responses."
    },
    {
      "name": "server.servlet.encoding.mapping",
      "description": "Mapping of locale to charset for response encoding."
    },
    {
      "name": "server.servlet.jsp.class-name",
      "description": "Class name of the servlet to use for JSPs. If registered is true and this class\n\t * is on the classpath then it will be registered.",
      "defaultValue": "org.apache.jasper.servlet.JspServlet"
    },
    {
      "name": "server.servlet.jsp.init-parameters",
      "description": "Init parameters used to configure the JSP servlet."
    },
    {
      "name": "server.servlet.jsp.registered",
      "description": "Whether the JSP servlet is registered.",
      "defaultValue": true
    },
    {
      "name": "server.servlet.path",
      "type": "java.lang.String",
      "description": "Path of the main dispatcher servlet.",
      "defaultValue": "/",
      "deprecation": {
        "replacement": "spring.mvc.servlet.path",
        "level": "error"
      }
    },
    {
      "name": "server.servlet.session.cookie.comment",
      "description": "Comment for the cookie.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "server.servlet.session.cookie.domain",
      "description": "Domain for the cookie."
    },
    {
      "name": "server.servlet.session.cookie.http-only",
      "description": "Whether to use \"HttpOnly\" cookies for the cookie."
    },
    {
      "name": "server.servlet.session.cookie.max-age",
      "description": "Maximum age of the cookie. If a duration suffix is not specified, seconds will be used. A positive value indicates when the cookie expires relative to the current time. A value of 0 means the cookie should expire immediately. A negative value means no \"Max-Age\"."
    },
    {
      "name": "server.servlet.session.cookie.name",
      "description": "Name of the cookie."
    },
    {
      "name": "server.servlet.session.cookie.partitioned",
      "description": "Whether the generated cookie carries the Partitioned attribute."
    },
    {
      "name": "server.servlet.session.cookie.path",
      "description": "Path of the cookie."
    },
    {
      "name": "server.servlet.session.cookie.same-site",
      "description": "SameSite setting for the cookie."
    },
    {
      "name": "server.servlet.session.cookie.secure",
      "description": "Whether to always mark the cookie as secure."
    },
    {
      "name": "server.servlet.session.persistent",
      "description": "Whether to persist session data between restarts.",
      "defaultValue": false
    },
    {
      "name": "server.servlet.session.store-dir",
      "description": "Directory used to store session data."
    },
    {
      "name": "server.servlet.session.timeout",
      "description": "Session timeout. If a duration suffix is not specified, seconds will be used.",
      "defaultValue": "30m"
    },
    {
      "name": "server.servlet.session.tracking-modes",
      "description": "Session tracking modes."
    },
    {
      "name": "server.ssl.bundle",
      "description": "Name of a configured SSL bundle."
    },
    {
      "name": "server.ssl.certificate",
      "description": "Path to a PEM-encoded SSL certificate file."
    },
    {
      "name": "server.ssl.certificate-private-key",
      "description": "Path to a PEM-encoded private key file for the SSL certificate."
    },
    {
      "name": "server.ssl.ciphers",
      "description": "Supported SSL ciphers."
    },
    {
      "name": "server.ssl.client-auth",
      "description": "Client authentication mode. Requires a trust store."
    },
    {
      "name": "server.ssl.enabled",
      "description": "Whether to enable SSL support.",
      "defaultValue": true
    },
    {
      "name": "server.ssl.enabled-protocols",
      "description": "Enabled SSL protocols."
    },
    {
      "name": "server.ssl.key-alias",
      "description": "Alias that identifies the key in the key store."
    },
    {
      "name": "server.ssl.key-password",
      "description": "Password used to access the key in the key store."
    },
    {
      "name": "server.ssl.key-store",
      "description": "Path to the key store that holds the SSL certificate (typically a jks file)."
    },
    {
      "name": "server.ssl.key-store-password",
      "description": "Password used to access the key store."
    },
    {
      "name": "server.ssl.key-store-provider",
      "description": "Provider for the key store."
    },
    {
      "name": "server.ssl.key-store-type",
      "description": "Type of the key store."
    },
    {
      "name": "server.ssl.protocol",
      "description": "SSL protocol to use.",
      "defaultValue": "TLS"
    },
    {
      "name": "server.ssl.server-name-bundles",
      "description": "Mapping of host names to SSL bundles for SNI configuration."
    },
    {
      "name": "server.ssl.trust-certificate",
      "description": "Path to a PEM-encoded SSL certificate authority file."
    },
    {
      "name": "server.ssl.trust-certificate-private-key",
      "description": "Path to a PEM-encoded private key file for the SSL certificate authority."
    },
    {
      "name": "server.ssl.trust-store",
      "description": "Trust store that holds SSL certificates."
    },
    {
      "name": "server.ssl.trust-store-password",
      "description": "Password used to access the trust store."
    },
    {
      "name": "server.ssl.trust-store-provider",
      "description": "Provider for the trust store."
    },
    {
      "name": "server.ssl.trust-store-type",
      "description": "Type of the trust store."
    },
    {
      "name": "server.use-forward-headers",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Replaced to support additional strategies.",
        "replacement": "server.forward-headers-strategy",
        "level": "error"
      }
    },
    {
      "name": "spring.application.admin.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable admin features for the application.",
      "defaultValue": false
    },
    {
      "name": "spring.application.admin.jmx-name",
      "type": "java.lang.String",
      "description": "JMX name of the application admin MBean.",
      "defaultValue": "org.springframework.boot:type=Admin,name=SpringApplication"
    },
    {
      "name": "spring.autoconfigure.exclude",
      "type": "java.util.List<java.lang.Class>",
      "description": "Auto-configuration classes to exclude."
    },
    {
      "name": "spring.git.properties",
      "type": "java.lang.String",
      "description": "Resource reference to a generated git info properties file.",
      "deprecation": {
        "replacement": "spring.info.git.location",
        "level": "error"
      }
    },
    {
      "name": "spring.info.build.location",
      "defaultValue": "classpath:META-INF/build-info.properties"
    },
    {
      "name": "spring.info.git.location",
      "defaultValue": "classpath:git.properties"
    },
    {
      "name": "spring.messages.basename",
      "defaultValue": [
        "messages"
      ]
    },
    {
      "name": "spring.threads.virtual.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to use virtual threads.",
      "defaultValue": false
    }
  ],
  "hints": [
    {
      "name": "server.servlet.jsp.class-name",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "jakarta.servlet.http.HttpServlet"
          }
        }
      ]
    },
    {
      "name": "spring.jmx.server",
      "providers": [
        {
          "name": "spring-bean-reference",
          "parameters": {
            "target": "javax.management.MBeanServer"
          }
        }
      ]
    }
  ]
}
