plugins {
	id "java-library"
	id "org.springframework.boot.auto-configuration"
	id "org.springframework.boot.configuration-properties"
	id "org.springframework.boot.deployed"
	id "org.springframework.boot.optional-dependencies"
}

description = "Spring Boot JDBC"

dependencies {
	api(project(":spring-boot-project:spring-boot"))
	api("org.springframework:spring-jdbc")
	
	implementation(project(":spring-boot-project:spring-boot-tx"))

	optional(project(":spring-boot-project:spring-boot-autoconfigure"))
	optional("com.h2database:h2")
	optional("com.mchange:c3p0")
	optional("com.oracle.database.jdbc:ojdbc11")
	optional("com.oracle.database.jdbc:ucp11")
	optional("com.zaxxer:HikariCP")
	optional("org.apache.commons:commons-dbcp2") {
		exclude group: "commons-logging", module: "commons-logging"
	}
	optional("org.apache.tomcat:tomcat-jdbc")
	optional("org.postgresql:postgresql")
	optional("org.vibur:vibur-dbcp")

	testImplementation(project(":spring-boot-project:spring-boot-test"))
	testImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
	testImplementation(testFixtures(project(":spring-boot-project:spring-boot")))
	testImplementation(testFixtures(project(":spring-boot-project:spring-boot-autoconfigure")))
	testImplementation("com.fasterxml.jackson.core:jackson-databind")
	testImplementation("com.ibm.db2:jcc")
	testImplementation("com.microsoft.sqlserver:mssql-jdbc")
	testImplementation("io.r2dbc:r2dbc-spi")
	testImplementation("org.hsqldb:hsqldb")
	testImplementation("org.mariadb.jdbc:mariadb-java-client") {
		exclude group: "org.slf4j", module: "jcl-over-slf4j"
	}

	testRuntimeOnly("ch.qos.logback:logback-classic")
	testRuntimeOnly("com.clickhouse:clickhouse-jdbc")
	testRuntimeOnly("com.mysql:mysql-connector-j")
	testRuntimeOnly("net.sourceforge.jtds:jtds")
	testRuntimeOnly("org.apache.derby:derby")
	testRuntimeOnly("org.apache.derby:derbytools")
	testRuntimeOnly("org.firebirdsql.jdbc:jaybird") {
		exclude group: "javax.resource", module: "connector-api"
	}
	testRuntimeOnly("org.testcontainers:jdbc") {
		exclude group: "javax.annotation", module: "javax.annotation-api"
		exclude group: "javax.xml.bind", module: "jaxb-api"
	}
	testRuntimeOnly("org.xerial:sqlite-jdbc")
	testRuntimeOnly("software.amazon.jdbc:aws-advanced-jdbc-wrapper") {
		exclude(group: "commons-logging", module: "commons-logging")
	}
}

tasks.named("checkSpringConfigurationMetadata").configure {
	exclusions = [
		"spring.datasource.dbcp2.*",
		"spring.datasource.hikari.*",
		"spring.datasource.oracleucp.*",
		"spring.datasource.tomcat.*",
	]
}
